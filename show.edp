////////////////////////////////////////////////
// Compliance Optimization                    //
// by the boundary variation method           //
// Copyright O.Pantz, G. Allaire (2005)       //
////////////////////////////////////////////////

// Optimization Parameters 
int niter=60;			//Number of iterations
real errelas=0.01;		//Error for the resolution of the variational problems
real metricmsh=5.;		//Metric used for the coarse mesh: Bigger=finer mesh
real initialstep=0.2;		//Initial step
real maxstep=-1.;		//Maximum step (<0 => no limit)
real lagrangestep=3.;		//Updating step of the Lagrange multiplier associated to the Volume's constraint
bool tocontinue=false;		//false=start a new computation, true=continue a previous computation
string backupname="output";	//Name under which the results are stored
int nsave=1;			//Number of iterations to be saved
real volume0=95.;		//=0 Constant Volume during the iterations, >0 Target Volume, <0 No Volume's constraint

int np =10;
// construction of the initial mesh
	mesh Sh,Th,Shprev,Thprev;
	//Definition of the boundary labels
	int neumann=1; int dirichlet=2;
	int free=3;


	int WALL = 1;
	int LOAD = 2;
	int FREE = 3;
//this is case 1
	
 // border L11(t = 0.0, 0.5){x = t; y = 0.0; label = FREE;}
 //    border L21(t = 0.0, 0.45){x = 0.5; y = t; label = FREE;}
 //    border L22(t = 0.45, 0.55){x = 0.5; y = t; label = LOAD;}
 //    border L23(t = 0.55, 1.0){x = 0.5; y = t; label = FREE;}
 //    border L31(t = 0.5, 0){x = t; y = 1.0; label = FREE;}
 //    border L41(t = 1.0, 0.9){x = 0.0; y = t; label = WALL;}
 //    border L42(t = 0.9, 0.1){x = 0.0; y = t; label = FREE;}
 //    border L43(t = 0.1, 0.0){x = 0.0; y = t; label = WALL;}

 //    Sh = buildmesh(L11(5 * np) + L21(5 * np) + L22(1 * np) + L23(5 * np) + L31(5 * np) + L41(1 * np) + L42(8 * np) + L43(1 * np));


//this is case 2

	real r = 0.15;                                                                    

    border L11(t = -1.0, 1.0){x = t; y = 0.0; label = FREE;}
    border L21(t = 0.0, 0.45){x = 1.0; y = t; label = FREE;}
    border L22(t = 0.45, 0.55){x = 1.0; y = t; label = LOAD;}
    border L23(t = 0.55, 1.0){x = 1.0; y = t; label = FREE;}
    border L31(t = 1.0, -1.0){x = t; y = 1.0; label = FREE;}
    border L41(t = 1.0, 0.9){x = -1.0; y = t; label = WALL;}
    border L42(t = 0.9, 0.1){x = -1.0; y = t; label = FREE;}
    border L43(t = 0.1, 0.0){x = -1.0; y = t; label = WALL;}

    
    border C11(t = 0, 2 * pi){x = -0.6 + r * cos(t); y = 0.22 + r * sin(t); label = FREE;}
    border C12(t = 0, 2 * pi){x = 0.2 + r * cos(t); y = 0.22 + r * sin(t); label = FREE;}
    border C21(t = 0, 2 * pi){x = -0.2 + r * cos(t); y = 0.5 + r * sin(t); label = FREE;}
    border C22(t = 0, 2 * pi){x = 0.6 + r * cos(t); y = 0.5 + r * sin(t); label = FREE;}
    border C31(t = 0, 2 * pi){x = -0.6 + r * cos(t); y = 0.78 + r * sin(t); label = FREE;}
    border C32(t = 0, 2 * pi){x = 0.2 + r * cos(t); y = 0.78 + r * sin(t); label = FREE;}

    Sh = buildmesh(L11(20 * np) + L21(5 * np) + L22(1 * np) + L23(5 * np) + L31(20 * np) + L41(1 * np) + L42(8 * np) + L43(1 * np)
                    + C11(-10 * np) + C12(-10 * np)  + C21(-10 * np) + C22(-10 * np) + C31(-10 * np) + C32(-10 * np));


//this is case 3

	 // real r = 0.2;                                                 

  //   border L11(t = 0.0, 1.0){x = t; y = 0.0; label = FREE;}
  //   border L21(t = 0.0, 0.2){x = 1.0; y = t; label = LOAD;}
  //   border L22(t = 0.2, 0.8){x = 1.0; y = t; label = FREE;}
  //   border L23(t = 0.8, 1.0){x = 1.0; y = t; label = LOAD;}
  //   border L31(t = 1.0, 0.0){x = t; y = 1.0; label = FREE;}
  //   border L41(t = 1.0, 0.95){x = 0.0; y = t; label = WALL;}
  //   border L42(t = 0.95, 0.05){x = 0.0; y = t; label = FREE;}
  //   border L43(t = 0.05, 0.0){x = 0.0; y = t; label = WALL;}

    
  //   border C11(t = 0, 2 * pi){x = 0.5 + r * cos(t); y = 0.25 + r * sin(t); label = FREE;}
  //   border C31(t = 0, 2 * pi){x = 0.5 + r * cos(t); y = 0.75 + r * sin(t); label = FREE;}

  //   Sh = buildmesh(L11(10 * np) + L21(2 * np) + L22(6 * np) + L23(2 * np) + L31(10 * np) + L41(1 * np) + L42(9 * np) + L43(1 * np)
  //       + C11(-15 * np) + C31(-15 * np)
  //       );


//this is case 4:

	 // real r = 0.25;

  //   border L11(t = -1.0, -0.9){x = t; y = 0; label = FREE;}
  //   border L12(t = -0.9, -0.2){x = t; y = 0; label = FREE;}
  //   border L13(t = -0.2, 0.2){x = t; y = 0; label = FREE;}
  //   border L14(t = 0.2, 0.9){x = t; y = 0; label = FREE;}
  //   border L15(t = 0.9, 1.0){x = t; y = 0; label = FREE;}
    
  //   border L21(t = 0, 1.2){x = 1.0; y = t; label = FREE;}
  //   border L22(t = 1.0, -1.0){x = t; y = 1.2; label = FREE;}
  //   border L23(t = 1.2, 0){x = -1.0; y = t; label = FREE;}
    
  //   border C10(t = 0, 2 * pi){x = -0.6 + r * cos(t); y = 0.4 + r * sin(t); label = FREE;}
  //   border C11(t = 0, 2 * pi){x = r * cos(t); y = 0.8 + r * sin(t); label = FREE;}
  //   border C12(t = 0, 2 * pi){x = 0.6 + r * cos(t); y = 0.4 + r * sin(t); label = FREE;}

  //   Sh = buildmesh(L11(1 * np) + L12(7 * np) + L13(4 * np) + L14(7 * np) + L15(1 * np) + L21(12 * np) + L22(20 * np) + L23(12 * np) 
  //       + C10(-15 * np) + C11(-15 * np) + C12(-15 * np) 
  //       );


//this is case 5
// real r = 0.05;

//     border L11(t = 0.4, -0.4){x = t; y = 1.2; label = FREE;}
//     border L21(t = 1.2, 0.8){x = -0.4; y = t; label = FREE;}
//     border L31(t = -0.4, -0.35){x = t; y = 0.8; label = LOAD;}
//     border L32(t = -0.35, -0.2){x = t; y = 0.8; label = FREE;}
//     border L41(t = 0.8, 0.0){x = -0.2; y = t; label = FREE;}
//     border L51(t = -0.2, -0.15){x = t; y = 0.0; label = WALL;}
//     border L52(t = -0.15, 0.15){x = t; y = 0.0; label = FREE;}
//     border L53(t = 0.15, 0.2){x = t; y = 0.0; label = WALL;}
//     border L42(t = 0.0, 0.8){x = 0.2; y = t; label = FREE;}
//     border L33(t = 0.2, 0.35){x = t; y = 0.8; label = FREE;}
//     border L34(t = 0.35, 0.4){x = t; y = 0.8; label = LOAD;}
//     border L22(t = 0.8, 1.2){x = 0.4; y = t; label = FREE;}

//     border C1(t = 0, 2 * pi){x = -0.25 + r * cos(t); y = 1.0 + r * sin(t); label = FREE;}
//     border C2(t = 0, 2 * pi){x = r * cos(t); y = 1.0 + r * sin(t); label = FREE;}
//     border C3(t = 0, 2 * pi){x = 0.25 + r * cos(t); y = 1.0 + r * sin(t); label = FREE;}

//     Sh = buildmesh(L11(8 * np) + L21(4 * np) + L31(1 * np) + L32(2 * np) + L41(8 * np) + L51(np) + L52(3 * np) + L53(1 * np) 
//                     + L42(8 * np) + L33(2 * np) + L34(1 * np) + L22(4 * np) + C1(-7 * np) + C2(-7 * np) + C3(-7 * np));



// 	Th=Sh;
// 	Thprev=Th;

	// cut function used to regularize the gradient shape near singularities
	// func cut=1-(x>19.5)*(abs(y)<1.5)-(x<0.5)*(y>1.5)*(y<4.5)-(x<0.5)*(y<-1.5)*(y>-4.5);
    plot(Sh,ps="test.eps");